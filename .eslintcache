[{"C:\\Users\\isa20\\github-view\\src\\index.js":"1","C:\\Users\\isa20\\github-view\\src\\reportWebVitals.js":"2","C:\\Users\\isa20\\github-view\\src\\App.js":"3","C:\\Users\\isa20\\github-view\\src\\Components\\Header\\Header.js":"4","C:\\Users\\isa20\\github-view\\src\\Components\\Search\\Search.js":"5","C:\\Users\\isa20\\github-view\\src\\services\\GithubUsers.js":"6","C:\\Users\\isa20\\github-view\\src\\Components\\Modal\\UserProfile.js":"7"},{"size":500,"mtime":1606950474748,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606950474748,"results":"10","hashOfConfig":"9"},{"size":192,"mtime":1608322539009,"results":"11","hashOfConfig":"9"},{"size":1107,"mtime":1608331796403,"results":"12","hashOfConfig":"9"},{"size":1808,"mtime":1608392292981,"results":"13","hashOfConfig":"9"},{"size":644,"mtime":1608408491612,"results":"14","hashOfConfig":"9"},{"size":1712,"mtime":1608409227565,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"19ikqhw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\isa20\\github-view\\src\\index.js",[],["33","34"],"C:\\Users\\isa20\\github-view\\src\\reportWebVitals.js",[],"C:\\Users\\isa20\\github-view\\src\\App.js",[],"C:\\Users\\isa20\\github-view\\src\\Components\\Header\\Header.js",[],"C:\\Users\\isa20\\github-view\\src\\Components\\Search\\Search.js",["35"],"import React, { useState, useEffect } from \"react\";\r\nimport UserProfile from \"../Modal/UserProfile\"\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { getUserByUserName } from \"../../services/GithubUsers\";\r\nimport { getRepoByUser } from \"../../services/GithubUsers\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport \"../../assets/style/Search.css\";\r\nexport default function SearchUser(userProps) {\r\n  var [hiden, setHiden] = useState(false);\r\n  const [user, setUser] = useState([]);\r\n  const [repo, setRepo] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setHiden(true);\r\n    getUserByUserName(user).then((user) => {\r\n      setUser(user)\r\n    });\r\n    getRepoByUser(repo).then((repo) => {\r\n      setRepo(repo);\r\n      console.log(\"Repo =>\", repo);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    hiden = false;\r\n  });\r\n\r\n  userProps = user;\r\n  console.log(\"Props Searcg\",userProps)\r\n  return (\r\n    <>\r\n      <div className=\"content-search\" width=\"100%\">\r\n      <form method=\"POST\" onSubmit={handleSubmit}>\r\n        <TextField\r\n          id=\"home-searcher\"\r\n          name={user}\r\n          label=\"Busque por um usuário\"\r\n          placeholder=\"GitHub User\"\r\n          helperText=\"\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          required\r\n          onChange={(e) => setUser(e.target.value)}\r\n        />\r\n          <Button className=\"button\" variant=\"contained\" style={{ backgroundColor: '#613dc1', color:'white',marginTop:26,marginLeft:20 }} type=\"submit\">\r\n            <Search />\r\n            Search\r\n          </Button>\r\n      </form>\r\n      </div>\r\n    \r\n     \r\n      <div>\r\n        {hiden === true && (\r\n         <UserProfile result = {user}/>\r\n        )}\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n","C:\\Users\\isa20\\github-view\\src\\services\\GithubUsers.js",[],"C:\\Users\\isa20\\github-view\\src\\Components\\Modal\\UserProfile.js",["36"],"import React from \"react\"\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport '../../assets/style/UserProfile.css'\r\nfunction userProfile (props) {\r\n \r\nvar userProfile = props.result;\r\n        console.log(\"Props\", props)\r\n        console.log(\"Result\",props.result)\r\n\r\n  \r\n      return( <>\r\n      <Card className=\"profile-card\">\r\n          \r\n      <CardActionArea>\r\n        <CardMedia\r\n          image={userProfile.avatar_url}\r\n          alt=\"User Perfil\"\r\n        />\r\n        <CardContent>\r\n        <img src={userProfile.avatar_url}  width=\"90rem\" height=\"90rem\"/>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {userProfile.name}\r\n          </Typography>\r\n          <Typography component=\"p\">{userProfile.bio}</Typography>\r\n          <br />\r\n          <Typography component=\"p\">\r\n            Seguindo: {userProfile.following}\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Seguidores: {userProfile.followers}\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Repositórios: {userProfile.public_repos}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button target=\"__blank\" size=\"small\"  color=\"primary\">\r\n          View Details\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n      )\r\n}\r\nexport default userProfile;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":26,"column":13,"nodeType":"43","endLine":26,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":26,"column":9,"nodeType":"46","endLine":26,"endColumn":74},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","Assignments to the 'hiden' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]